@page "/d0527"

<h3>0527 Requirement</h3>

<pre>
    我以Login为例，重点在Password的解密比较、语言的默认设置、
    用户权限及程式画面的文字是否依据语言选择等，
    这才是要在测试报告中不可缺的
    以查询为例，重点在依条件查询及主表明细表多层关联。

    我们工程师发现Q040点了TR Items后Serial Items并不相符。
    
    而且，页面一开始就做了查询所有资料，之后只能在这个资料集去筛选，也不是正确的。

    之前也说过，DataGrid翻页要在上方，但仍有放在下方的，我就无法理解，你们是怎样测试的？

    另外，与修改有关的，按理主Key是不能修改的，但你们的程式却允许，结果执行失败，
    但页面已是修改的数据，实际上数据库是没有修改成功的，刷新页面后又回到原来的数据。

    以上说明，敬请改善。

    每一支程式的测试，应该要有一份测试报告，报告要描述测试了什么，
    这样我们才能知道有没有问题。基本上应该是与我们现在的程式是一致的，
    除非是我们现在的程式本身有Bug。
</pre>

<pre>
    还有，我们现在查询出来的数据，是在右方直立显示，网页也许做不到，
    但也要有点击一笔数据后跳出该笔数据所有字段的呈现，现在是没看到。

    因为数据是会改变的，所以，必然需要有一"查询"可点击，然后才依查询条件进行查询。
    现在筛选条件放在每个字段上，之前我也说可以，但还是要点击查询后才有数据，
    不是页面一进来就把所有数据放进来。
</pre>

<pre>
    测试报告不要太复杂，但也不是CRUD的测试。通常也就是对照原程式的测试。
    所有程式的测试都一样，一个是刚进程式的初始，可以对照原程式的初始
    然后是用户操作，有Menu有Button，有一些Event如Click,Double Click,KeyDown...等
    看原程序就知道有哪些function
    同类型的程式大部分都有相同的设计
    以S010为例，我们发现有些问题：
    1.进入页面不要先查询所有数据，须输入条件后点击查询才进行
    2.每次查询都需要依筛选条件向数据库查询，而不是只在第一次查询的全部数据结果做过滤筛选，这样无法呈现正确数据
    3.USER_PWD须用*****显示，修改后存入数据表时要加密储存
    *4.Language只能在EN,TW,CN,TH,VN
    *5.Enable只能Y,N
    6.USER_ID编辑，可以新增不能修改，修改须报错
    7.可以用已存在的数据，修改USER_ID后做新增，而不是Create一个空数据输入
    8.页面重整Refresh要回到初始状态，不是查询数据
    9.要记录USER_LOG

    也就是说，如果测试者对照原程式就可发现这些问题
    相信类似程式都会有相同问题，因为这是设计思路的问题。

    *4 & *5是原程式并没有控管好，造成Language可以被更新为错误的内容(不是EN,TW,CN,TH,VN)
    *5是原程式的判断逻辑为非N即Y，所以输入D的保存结果是Y；但WebWES则会是存为D，等同于N

    把这个对照测试记录下来，就是测试报告，不会很复杂。
</pre>

<h3>TODO</h3>
<ol>
    <li>所有頁面按 MLASRS 操作模式調整一次, 不採用 grid 集成的預設篩選排序, 全部改為客制, 基本上必需 Query 才顯示數據 </li>
    <li>維持 MLASRS 原有的 Refresh 功能, 即如頁面調整後的初始狀態, 清掉所有已顯示的數據 </li>
    <li>針對S010, USER_PWD须用*****显示，修改后存入数据表时要加密储存, Language只能在EN,TW,CN,TH,VN </li>
    <li>Create 要使用 Edit 的數據當模板</li>
    <li>Enable 只能 Y|N</li>
    <li>USER_LOG is required</li>




</ol>

<h3>TO VERIFY</h3>
<ol>
    <li>C010 Stock Items 多選時, 按目前觀察 Pallet Items 只顯示第一個選的, 是否就按這樣設計, 或是顯示出所有選的? </li>

    <li>C010 Stock Items 多選後, Execute ? </li>



</ol>



@code {

}
